extends layout

block content

    script(src='https://checkout.stripe.com/checkout.js')

    style.
        .pewtube-pro {
            background: #edeeee;
            font-weight: 400;
            font-size: 13px;
            margin-left: 3px;
            padding: 8px 9px;
            display: inline-block;
            border-radius: 3px;
            transform: translateY(-2px);
        }

        .dropdown {
            text-align: center;
        }

        .button, .dropdown-menu {
            margin: 10px auto
        }

        .dropdown-menu {
            width: 200px;
            left: 50%;
            margin-left: -100px;
            margin-top: 0px;
        }


    br
    div.center-block.text-center.col-sm-12
        if upload.status == 'processing'
            h2 Your upload #{upload.title } is processing. Check back in a couple minutes.
            br
            br

        br
        br
        if upload.fileType === 'video'
            div.display-div(style="min-width:50%;min-height:50%;margin:0 auto;")
                // TODO: Sub out thumbnail here

                video.display-element(poster=`${uploadServer}/${upload.uploader.channelUrl}/${upload.thumbnails.generated || upload.thumbnails.medium}` controls='', style="max-width:100%;background-color:black;")
                    // to
                    source.video-source(src=`${uploadServer}/${upload.uploader.channelUrl}/${upload.uniqueTag}.mp4`, type='video/mp4')
                    //source(src=upload.uploadUrl, type='video/mp4')

        else if upload.fileType === 'audio'
            div
                audio.my_audio(style="width:80%;" controls='', preload='none')
                    source(src=`${uploadServer}/${upload.uploader.channelUrl}/${upload.uniqueTag}${upload.fileExtension}`, type='audio/mp3')
                    //source(src=upload.uploadUrl, type='audio/mp3')

        else if upload.fileType === 'image'
            div.display-div(style="")
                a(href=`${uploadServer}/${upload.uploader.channelUrl}/${upload.uniqueTag}${upload.fileExtension}`)
                    img.display-element(src=`${uploadServer}/${upload.uploader.channelUrl}/${upload.uniqueTag}${upload.fileExtension}` style="max-width:80%;min-width:50%;min-height:50%;max-height:620px;")


        div.non-player-content(style="position:relative;")

            br
            br
            // Upload Title
            //h2(class="upload-title-value" style="align-content:center;justify-content:normal;width:60%;margin: 0 auto;")=upload.title
            h2.balance-text(class="upload-title-value" style="text-wrap:balance;width:80%;margin:0 auto;")=upload.title

            br
            // uploader byline
            h3.uploader-name(style="margin-top:25px;font-size:26px;")
                if upload.uploader.customThumbnail
                    a(href=`/user/${upload.uploader.channelUrl}`)

                        img(src=`${uploadServer}/${upload.uploader.channelUrl}/${upload.uploader.customThumbnail}` width="140px" height="140px")
                        br
                        br
                else if upload.uploader.thumbnailUrl
                    a(href=`/user/${upload.uploader.channelUrl}`)

                        img(src=`${uploadServer}/${upload.uploader._id}/unique.png` width="140px" height="140px")
                        br
                        br

                a(href=`/user/${upload.uploader.channelUrl}` style="color:rgb(51, 51, 51)") #{upload.uploader.channelName || upload.uploader.channelUrl}
                    if upload.uploader.verified == true
                        img(src="/images/verified.jpg" width="25px" height="25px" style="margin-left:3px;margin-top:-2px;margin-right:5px;")
                    if upload.uploader.plan == 'plus'
                        span.pewtube-pro PLUS

            if alreadySubbed
                button.subscribe.btn.btn-danger(style="border-radius:4px") Unsubscribe (#{subscriberAmount})
            else
                button.subscribe.btn.btn-success(style="border-radius:4px") Subscribe (#{subscriberAmount})
            br
            br

            if upload.quality && upload.quality.high
                div.dropdown
                    button#dropdownMenu1.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown' style="border-radius:4px;" quality="low")
                        | Quality: Low
                        span.caret

                    ul.dropdown-menu(role='menu', aria-labelledby='dropdownMenu1' style="cursor:pointer;")
                        li(role='presentation')
                            a.low-quality Low
                        li(role='presentation')
                            a.high-quality High

            if upload.uploader.plan == 'plus' && ( upload.uploader.channelUrl == 'pewtube' || upload.uploader.channelUrl == 'anthony')
                br
                button.donate.btn.btn-success(style="margin-bottom:-10px") Donate

            div
                // edit button
                if ( user && user.channelUrl == upload.uploader.channelUrl ) ||  ( user && user.role == 'admin' )
                    br
                    a(href=`/user/${upload.uploader.channelUrl}/${upload.uniqueTag}/edit`)
                        button.btn.btn-success(style="margin-bottom:-10px") Edit


            // EXTRA BUTTONS
            div
                if upload.fileType == 'image' || upload.fileType == 'video'
                    div.change-size-button.increase-size
                        h1(style="cursor:pointer") +
                    div.change-size-button.decrease-size
                        h1(style="cursor:pointer") -
                div.change-size-button
                    h2.download-button
                        i.download-icon.fa.fa-download(aria-hidden="true" style="cursor:pointer")
                div.change-size-button
                    h2.share-button
                        i.share-icon.fa.fa-share(aria-hidden="true" style="cursor:pointer")
                if upload.fileType == 'video' || upload.fileType == 'audio'
                    div.change-size-button(style="margin-left:0px")
                        h2.repeat-div(style="opacity:0.4")
                            i.repeat-icon.fa.fa-repeat(aria-hidden="true" style="cursor:pointer")
                div.change-size-button(style="cursor:pointer")
                    h2.report-button(style="")
                        i.share-icon.fa.fa-exclamation-triangle(aria-hidden="true" style="cursor:pointer;font-size:19px;")



            // More Upload Details
            div.col-sm-12
                // Upload View Amount
                h3 #{upload.views} Views

                // Upload time ago and uploader
                if upload.uploader
                    h4
                        | Uploaded #{upload.timeAgo} &nbsp

                    if upload.visibility == 'removed'
                        h2 Upload Deleted

                    if upload.fileType == 'video' || upload.fileType == 'audio'
                        p(style="margin-top:15px") File Size: #{ ( upload.fileSize/ ( 1000 * 1000)).toFixed() } MB

                    if upload.category
                        each category in categories
                            if category.name == upload.category
                                p(style="margin-top:15px;font-size:12px;") Category: #{category.displayName}

                                if upload.subcategory

                                    each subcategory in category.subcategories

                                        if upload.subcategory == subcategory.name
                                            p(style="margin-top:15px;font-size:12px;") Subcategory: #{subcategory.displayName}


                    if upload.rating
                        if upload.rating == 'allAges'
                            p(style="margin-top:15px;font-size:12px;") Rating: Safe For Work
                        if upload.rating == 'mature'
                            p(style="margin-top:15px;font-size:12px;") Rating: Not Safe For Work
                        if upload.rating == 'sensitive'
                            p(style="margin-top:15px;font-size:12px;") Rating: Sensitive (18+)


                    br


                // react functionality
                div.react(style="width:39%;background-color:white;margin:0 auto;border-radius:10px;margin-bottom:21px;padding-bottom:12px;")
                    br
                    each emoji in emojis
                        div(style="padding-right:15px;display:inline-block;")
                            a(href="#")
                                if currentReact
                                    if currentReact == emoji.name
                                        div.clicked-emoji
                                            img(class=emoji.name src='/emojis/' + emoji.name + '.jpg' width="50px" )

                                    else
                                        div.unclicked-emoji
                                            img(class=emoji.name src='/emojis/' + emoji.name + '.jpg' width="50px" )

                                else
                                    div.clicked-emoji
                                        img(class=emoji.name src='/emojis/' + emoji.name + '.jpg' width="50px" )

                            p(class=emoji.name) #{emoji.amount}



                // Upload Description
                if upload.description
                    h4(class="upload-description-value") Description
                    p(style="width:50%;text-align: center;margin: 0 auto;white-space:pre-line;word-wrap:break-word;" id="descriptionText") #{upload.description}

                br
                br

            // SHARING BUTTONS
            div

                a(href=`https://www.facebook.com/sharer/sharer.php?u=${url}` target="_blank")
                    img(src='/images/facebook-share.jpg', width='100', height='30', alt='Share on Twitter')
                a(href=`https://twitter.com/share?url=${url}` target="_blank")
                    img(src='/images/twitter-share.jpg', width='100', height='30', alt='Share on Twitter')
                a(href=`mailto:?subject=Check out this ${upload.fileType}&body=Check out this ${upload.fileType} on PewTube: ${url}`, title='Share by Email')
                    img(src='/images/email-share.jpg')

            br
            button.btn.btn-default.copy-button(style="padding:4px 12px" data-clipboard-text=`${upload.title} \n\nhttps://pew.tube/user/${upload.uploader.channelUrl}/${upload.uniqueTag}`)
                i.fa.fa-info
                | Copy Details

            button.btn.btn-default.copy-button(style="padding:4px 12px" data-clipboard-text=`${upload.title} by ${upload.uploader.channelName} \n\n https://pew.tube/user/${upload.uploader.channelUrl}/${upload.uniqueTag} \n\n #PewTube`)
                i.fa.fa-info
                | With User Info


            // COMMENT SECTION AND FORM
            div
                br
                br
                br
                div.col-sm-12
                if user
                    // comment form
                    div.comment-form.form-group
                        form.form-horizontal.overall-comment-form(class="comment-form" action='/api/comment', method='post')
                            input(type='hidden', name='_csrf', value=_csrf)
                            label(for="comment" style="font-size:17px;") Enter Comment
                            br
                            input(type="hidden" name="upload" id="upload" value=upload._id)
                            textarea(name="comment" id="comment" minlength="2" style="width:400px;max-width:100%")
                            br
                            input.btn.btn-md.btn-success(type='submit' value="Post Comment" style="border-radius:4px")
                else
                    div.comment-form.form-group.no-user-comment-form
                        form.form-horizontal.overall-comment-form(class="comment-form")
                            label(for="comment" style="font-size:17px;") Enter Comment
                            br
                            textarea(name="comment" id="comment" minlength="2" style="width:400px;max-width:100%")
                            br
                            input.btn.btn-md.btn-success(type='submit' value="Post Comment" style="border-radius:4px")


                // DISPLAY COMMENTS

                // otherwise display all comments
                if commentCount == 0
                    div.comment-containing-div(style="width:400px;margin:0 auto;margin-top:70px;")
                        div(style="display:block")
                            h3.no-comments-header(style="text-decoration:underline;text-align:left;") No Comments Yet

                            div.comment-thread
                                div.original-comment.no-comments-div(style="display:block;padding-bottom:15px;padding-top:10px;")

                else
                    if commentCount > 0
                        div.comment-containing-div.col-sm-6.col-sm-offset-3(style="margin-top:60px;text-align:center")
                            if commentCount < 1
                                div(style="display:block")
                                    h3(style="text-decoration:underline;text-align:left;") #{commentCount} Comment
                            else
                                div(style="display:block")
                                    h3(style="text-decoration:underline;text-align:left;") #{commentCount} Comments
                            each comment in comments
                                if comment.commenter
                                    div.comment-thread
                                        div.original-comment(style="display:block;padding-bottom:15px;padding-top:10px;")
                                            // TODO: Add it here
                                            div.top-line(style="text-align:left;")
                                                p(style="text-align:left;display:inline-block;")
                                                    a(href=`/user/${comment.commenter.channelUrl}` style="color:black;margin-right:5px;") #{comment.commenter.channelName || comment.commenter.channelUrl}
                                                p(style="display:inline-block;") - #{comment.timeAgo} &nbsp
                                                    a.reply-link Reply
                                                    // delete button
                                                    if user && ( user.channelUrl == upload.uploader.channelUrl || user.channelUrl == comment.commenter.channelUrl)
                                                        a.delete-comment-button(style="margin-left:9px;" commentId=comment._id) Delete
                                            p(style="text-align:left;") #{comment.text}

                                            // container that appears after you hit Reply
                                            div.reply-container(style="display:none")
                                                form.form-horizontal.reply-comment-form(class="comment-form" action='/api/comment', method='post')
                                                    input(type='hidden', name='_csrf', value=_csrf)
                                                    input(type="hidden" name="upload" id="upload" value=upload._id)
                                                    input(type="hidden" name="commentId" id="commentId" value=comment.id)
                                                    textarea(name="comment" id="comment" minlength="2" style="width:400px;max-width:100%;")
                                                    br
                                                    input.btn.btn-md.btn-success(type='submit' value="Post Comment" style="border-radius:4px")
                                                    br
                                                    br

                                        div.responses
                                            each responseComment in comment.responses
                                                if responseComment.visibility !== 'removed'
                                                    div(style="display:block;padding-bottom:15px;padding-left:40px;")
                                                        div.top-line(style="text-align:left;")
                                                            p(style="text-align:left;display:inline-block;")
                                                                a(href=`/user/${responseComment.commenter.channelUrl}` style="color:black;margin-right:5px;") #{responseComment.commenter.channelName || responseComment.commenter.channelUrl}
                                                            p(style="display:inline-block;") - #{responseComment.timeAgo} &nbsp
                                                        p(style="text-align:left;") #{responseComment.text}

                                                    //div.reply-container(style="display:none")
                                                    //    form.form-horizontal.reply-form(class="comment-form" action='/api/comment', method='post')
                                                    //        input(type='hidden', name='_csrf', value=_csrf)
                                                    //        input(type="hidden" name="upload" id="upload" value=upload._id)
                                                    //        input(type="hidden" name="commentId" id="commentId" value=responseComment.id)
                                                    //        textarea(name="comment" id="comment" style="width:400px;")
                                                    //        br
                                                    //        input.btn.btn-md.btn-success(type='submit' value="Post Comment")
                                                    //        br
                                                    //        br






                                else
                                    p No commenter


    script.
      balanceText();


    script.

      // inputOptions can be an object or Promise
      var inputOptions1 = new Promise(function (resolve) {
        resolve({
          'tos': 'Terms Of Service Violation',
          'copyright': 'Copyrighted Content',
          'rating': 'Incorrect Upload Rating'
        });
      });

      var alreadyReported = '#{alreadyReported}'

      console.log('already reported ' + alreadyReported)

      console.log(alreadyReported)

      if(alreadyReported == 'true'){

        console.log('running here')

        $('.report-button').on('click', function(){
          swal({ text: 'Thank you for reporting this upload '})
        });

      } else {
          console.log('thing here')

          $('.report-button').on('click', function () {
            swal({
              title: 'Report Upload',
              text: 'Select your reason for reporting upload',
              input: 'radio',
              showCancelButton: true,
              confirmButtonText: "Report Upload",
              inputOptions: inputOptions1,
              inputValidator: function (result) {
                return new Promise(function (resolve, reject) {
                  if (result) {
                    resolve();
                  } else {
                    reject('You need to select something!');
                  }
                });
              }
            }).then(function (result) {

              var csrf = '#{_csrf}'

              var uploadId = '#{upload._id}'

              var data = {
                _csrf: csrf,
                uploadId,
                reason: result.value
              }

              $.ajax({
                type: 'POST',
                url: '/api/report',
                data,
                success: function (data) {
                  if (data == 'success') {
                    swal({ title: "Reported", text : 'Thank you for reporting the upload'})
                  } else {
                    swal("Something didn't work, please contact PewTube at ceo@pew.tube or via the widget in the bottom right corner")
                  }
                  console.log(data);
                },
                error: function (err) {
                  console.log(err);
                }
              });


              // send via ajax

              if (!result.value) return


            })
          })

      }


    include ./mediaPlayerPartials/changeQualityJs

    include ./mediaPlayerPartials/changeUserDefaultQualityJs

    script(src="https://cdn.plyr.io/2.0.16/plyr.js")

    include mediaPlayerPartials/creditFunctionalityJs

    include mediaPlayerPartials/deleteCommentJs

    include mediaPlayerPartials/subscribeFunctionalityJs

    // delete comment functionality



    //script.
    //  function getParameterByName(name, url) {
    //    if (!url) url = window.location.href;
    //    name = name.replace(/[\[\]]/g, "\\$&");
    //    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
    //      results = regex.exec(url);
    //    if (!results) return null;
    //    if (!results[2]) return '';
    //    return decodeURIComponent(results[2].replace(/\+/g, " "));
    //  }
    //
    //  var autoplay = getParameterByName('autoplay');
    //
    //  #{recs[0].uploader}/#{recs[0].upload.uniqueTag}
    //
    //  console.log(autoplay); // turn autoplay button on here
    //
    //    //      if(autoplay){
    //    //        markTheButtonAsOn
    //    //      }
    //
    //    //      on('songfinish', function(){
    //    //        if(this thing is true){
    //    //          window.href = recs[0].channelUrl + '?autoplay=on'
    //    //        }
    //    //      })


    script.
      var sensitive = #{upload.sensitive}
      if(sensitive){
        swal({
            title: "This content is marked as sensitive",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "View Media",
            cancelButtonText: "Return to previous page",
            closeOnConfirm: false,
            closeOnCancel: false,
            customClass: 'swal-wide'
          },
          function (isConfirm) {

            if (isConfirm) {
              swal.close();
            } else {
              window.history.go(-1)
              swal.close()
            }
          });
      }

      setTimeout(function(){
        $('.swal-wide').siblings('.sweet-overlay').css({
          'background-color': 'black',
          'opacity' : 0.85
        })
      }, 200)

    script.

      $('.no-user-comment-form').on('click touchstart', function(event){
        event.preventDefault();
        // swal("Please register to leave a comment")

        swal({
            title: "Please register to leave a comment",
            type: "info",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Register now",
            cancelButtonText: "Return to media",
            closeOnConfirm: false,
            closeOnCancel: false
          },
          function (isConfirm) {
            if (isConfirm) {
              window.location.href = "/signup";
            } else {
              swal.close()
            }
          });


            //        swal({
            //          title: 'Please register to leave a comment',
            //          type: 'info',
            //          showCancelButton: true,
            //          confirmButtonColor: '#3085d6',
            //          cancelButtonColor: '#d33',
            //          confirmButtonText: 'Register now'
            //        }).then(function () {
            //          swal(
            //            'Deleted!',
            //            'Your file has been deleted.',
            //            'success'
            //          )
            //        })

      })


        console.log('here')

        function getParameterByName(name, url) {
          if (!url) url = window.location.href;
          name = name.replace(/[\[\]]/g, "\\$&");
          var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
          results = regex.exec(url);
          if (!results) return null;
          if (!results[2]) return '';
          return decodeURIComponent(results[2].replace(/\+/g, " "));
        }

        var autoplay = getParameterByName('autoplay');

        var sensitive = #{upload.sensitive}

        var autoplay;
        if(sensitive || autoplay == 'off'){
          autoplay = false;
        } else {
          autoplay = true;
        }

        var plyr_options = {
          autoplay: autoplay,
          clickToPlay: true,
          controls: ['mute', 'progress', 'play', 'fullscreen', 'volume', 'play-large', 'current-time']
        };

        // Create the plyr instances - this defines players[0] as our primary player.
        var players = plyr.setup(plyr_options);

        players[0].on('ready', function (event) {
          $('.display-element').css('max-height', '620px')

          // set video max-height to 620px
        });

        players[0].on('enterfullscreen', function (event) {

          console.log('this is running');

          $('.display-element').css('max-height', "")


          // remove video max-height

        });

        players[0].on('exitfullscreen', function (event) {
          // add max height
          $('.display-element').css('max-height','620px')
        });




    script.
        // share button to get embed link

        var uniqueTag = '#{upload.uniqueTag}';

        var fileType = '#{upload.fileType}';

        var embedString = '<iframe width="560" height="315" src="https://pew.tube/embed/' + uniqueTag + '" frameborder="0" allowfullscreen=""></iframe>'

        if(fileType == 'audio'){
          embedString = '<iframe width="560" height="54" src="https://pew.tube/embed/' + uniqueTag + '" frameborder="0" allowfullscreen=""></iframe>'
        }

        $('.share-button').on('click', function(){
          swal({
            title: 'Embed',
            text: embedString
          });
        })

    script.

      // download functionality

      var downloadUrl = '#{uploadServer}/#{upload.uploader.channelUrl}/#{upload.uniqueTag}#{upload.fileExtension}'

      var uploadType = '#{upload.fileType}'

      if(uploadType=='video'){
        downloadUrl = '#{uploadServer}/#{upload.uploader.channelUrl}/#{upload.uniqueTag}.mp4'
      }

      function downloadIt() {
        var name = "#{upload.title}"
        if (name && name !== '') {
          var link = document.createElement('a');
           link.download = name;

          // TODO: If I'm serving from the same origin this will work
          // link.href = '/images/twitter-share.jpg'
          //link.href = '/user/#{upload.uploader.channelUrl}/#{upload.uniqueTag}#{upload.fileType}'

          link.href = downloadUrl

          link.click();
        }
      }

      $('.download-button').click(function () {

        downloadIt()

      });

    script.

      // copy details functionality

      $('button').tooltip({
        trigger: 'click',
        placement: 'bottom'
      });

      function setTooltip(btn, message) {
        $(btn).tooltip('hide')
          .attr('data-original-title', message)
          .tooltip('show');
      }

      function hideTooltip(btn) {
        setTimeout(function () {
          $(btn).tooltip('hide');
        }, 1000);
      }

      // Clipboard

      var clipboard = new Clipboard('.copy-button');

      clipboard.on('success', function (e) {
        setTooltip(e.trigger, 'Copied!');
        hideTooltip(e.trigger);
      });

      clipboard.on('error', function (e) {
        setTooltip(e.trigger, 'Failed!');
        hideTooltip(e.trigger);
      });

    script.
      var myTextEl = document.getElementById('descriptionText');
      myTextEl.innerHTML = Autolinker.link(myTextEl.innerHTML);


    include ./mediaPlayerPartials/repeatFunctionalityJs

    if user
        script.
          var user = '#{user.id}'
    else
        script.
          var user = undefined





    include ./mediaPlayerPartials/reactFunctionalityJs


block extra_js
  script(src="https://cdnjs.cloudflare.com/ajax/libs/autolinker/1.4.4/Autolinker.js")


block extra_css
  link(rel="stylesheet" href="https://cdn.plyr.io/2.0.16/plyr.css")


block extra_footer_js
  script(src="/js/media.js")
  script(src="https://cdn.plyr.io/2.0.16/plyr.js")

